@page "/organizers/details/{id:guid}"
@inject OrganizerState organizerState

<MudText Typo="Typo.h3">Organizer details</MudText>

<MudCard Outlined="true">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">@organizerState.CurrentOrganizer.PersonalInfo.FirstName @organizerState.CurrentOrganizer.PersonalInfo.LastName</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudText><strong>Email: </strong>@organizerState.CurrentOrganizer.PersonalInfo.Email</MudText>
        <MudText><strong>Country: </strong>@organizerState.CurrentOrganizer.PersonalInfo.Country</MudText>
        <MudText><strong>City: </strong>@organizerState.CurrentOrganizer.PersonalInfo.City</MudText>
        <MudText><strong>Postal code: </strong>@organizerState.CurrentOrganizer.PersonalInfo.Code</MudText>
        <MudText><strong>Street: </strong>@organizerState.CurrentOrganizer.PersonalInfo.Street</MudText>
        <MudText><strong>House number: </strong>@organizerState.CurrentOrganizer.PersonalInfo.HouseNumber</MudText>
    </MudCardContent>
    <MudCardActions>
        <CreateTournamentBtnComponent Organizer="organizerState.CurrentOrganizer" />
        <MudLink Href="organizers">Go back</MudLink>
    </MudCardActions>
</MudCard>

@code {
    [Parameter] public Guid id { get; set; }
    protected override Task OnParametersSetAsync()
    {
        if (organizerState.CurrentOrganizer is null)
        {
            organizerState.SetCurrentOrganizer(id);
        }
        return base.OnParametersSetAsync();
    }
}